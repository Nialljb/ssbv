test.df <- imp.GM.TICV.corrected # imp.GM # imp.wm
tissue <- "spm_gm"
#############################
pop.df$Age <- as.factor(as.character(pop.df$Age))
test.df$Age <- as.factor(as.character(test.df$Age))
test.df$domain <- droplevels(test.df$domain)
pop.df$sample <- "population"
df <- rbind(test.df, pop.df)
CairoPDF(file=paste("~/reviewer_gm_vol.pdf", sep=""), width=8, height=12, pointsize=10)
#geom_boxplot(data=pop.df,outlier.shape=NA) +
p <- ggplot(df, aes(x=df$domain, y=df$score)) +
geom_boxplot(data=df, outlier.shape=NA, aes(color=df$sample,),position=position_dodge(width = 0.90)) +
#geom_jitter(data=df, size = 1, alpha=0.6, position=position_dodge(width = 0.90),
#aes(x=df$domain, y=df$score, color=df$sample)) +
theme_classic() +
theme(axis.text.x=element_text(angle=45,hjust=1)) +
labs(x="ROI",y="Volume", caption="") +
#scale_color_manual(values = npgGroupPalette) +
coord_flip() +
geom_vline(xintercept=28.5,linetype="dashed") +
ylab("Volume/TCIV") +
ggtitle("Distribution of Imperial TBI patients & controls overlaid on population data (boxplots)")
plot(p); dev.off(); p
p
print("Saving plot: ")
#############################
# EDIT HERE:
# cortical, subcortical, wm, net
pop.df <- pop.GM.TICV.corrected #pop.GM # pop.wm
test.df <- imp.GM.TICV.corrected # imp.GM # imp.wm
tissue <- "spm_gm"
#############################
pop.df$Age <- as.factor(as.character(pop.df$Age))
test.df$Age <- as.factor(as.character(test.df$Age))
test.df$domain <- droplevels(test.df$domain)
pop.df$sample <- "population"
df <- test.df # rbind(test.df, pop.df)
CairoPDF(file=paste("~/reviewer_gm_vol.pdf", sep=""), width=8, height=12, pointsize=10)
#geom_boxplot(data=pop.df,outlier.shape=NA) +
p <- ggplot(df, aes(x=df$domain, y=df$score)) +
geom_boxplot(data=df, outlier.shape=NA, aes(color=df$sample,),position=position_dodge(width = 0.90)) +
#geom_jitter(data=df, size = 1, alpha=0.6, position=position_dodge(width = 0.90),
#aes(x=df$domain, y=df$score, color=df$sample)) +
theme_classic() +
theme(axis.text.x=element_text(angle=45,hjust=1)) +
labs(x="ROI",y="Volume", caption="") +
#scale_color_manual(values = npgGroupPalette) +
coord_flip() +
geom_vline(xintercept=28.5,linetype="dashed") +
ylab("Volume/TCIV") +
ggtitle("Distribution of Imperial TBI patients & controls overlaid on population data (boxplots)")
plot(p); dev.off(); p
p
print("Saving plot: ")
#############################
# EDIT HERE:
# cortical, subcortical, wm, net
pop.df <- pop.GM.TICV.corrected #pop.GM # pop.wm
test.df <- imp.GM.TICV.corrected # imp.GM # imp.wm
tissue <- "spm_gm"
#############################
pop.df$Age <- as.factor(as.character(pop.df$Age))
test.df$Age <- as.factor(as.character(test.df$Age))
test.df$domain <- droplevels(test.df$domain)
pop.df$sample <- "population"
df <- test.df # rbind(test.df, pop.df)
CairoPDF(file=paste("~/reviewer_gm_vol.pdf", sep=""), width=8, height=12, pointsize=10)
#geom_boxplot(data=pop.df,outlier.shape=NA) +
p <- ggplot(df, aes(x=df$domain, y=df$score)) +
geom_boxplot(data=df, outlier.shape=NA, aes(color=df$sample,),position=position_dodge(width = 0.90)) +
geom_jitter(data=df, size = 1, alpha=0.6, position=position_dodge(width = 0.90),
aes(x=df$domain, y=df$score, color=df$sample)) +
theme_classic() +
theme(axis.text.x=element_text(angle=45,hjust=1)) +
labs(x="ROI",y="Volume", caption="") +
#scale_color_manual(values = npgGroupPalette) +
coord_flip() +
geom_vline(xintercept=28.5,linetype="dashed") +
ylab("Volume/TCIV") +
ggtitle("Distribution of Imperial TBI patients & controls overlaid on population data (boxplots)")
plot(p); dev.off(); p
p
print("Saving plot: ")
#############################
# EDIT HERE:
# cortical, subcortical, wm, net
pop.df <- pop.GM.TICV.corrected #pop.GM # pop.wm
test.df <- imp.GM.TICV.corrected # imp.GM # imp.wm
tissue <- "spm_gm"
#############################
pop.df$Age <- as.factor(as.character(pop.df$Age))
test.df$Age <- as.factor(as.character(test.df$Age))
test.df$domain <- droplevels(test.df$domain)
pop.df$sample <- "population"
df <- test.df # rbind(test.df, pop.df)
CairoPDF(file=paste("~/reviewer_gm_vol.pdf", sep=""), width=8, height=12, pointsize=10)
#geom_boxplot(data=pop.df,outlier.shape=NA) +
p <- ggplot(df, aes(x=df$domain, y=df$score)) +
geom_boxplot(data=df, outlier.shape=NA, aes(color=df$sample,),position=position_dodge(width = 0.90)) +
geom_jitter(data=df, size = 1, alpha=0.6, position=position_dodge(width = 0.90),
aes(x=df$domain, y=df$score, color=df$sample)) +
stat_compare_means() +
theme_classic() +
theme(axis.text.x=element_text(angle=45,hjust=1)) +
labs(x="ROI",y="Volume", caption="") +
scale_color_manual(values = npgGroupPalette) +
coord_flip() +
geom_vline(xintercept=28.5,linetype="dashed") +
ylab("Volume/TCIV") +
ggtitle("Distribution of Imperial TBI patients & controls overlaid on population data (boxplots)")
plot(p); dev.off(); p
p
print("Saving plot: ")
#############################
# EDIT HERE:
# cortical, subcortical, wm, net
pop.df <- pop.GM.TICV.corrected #pop.GM # pop.wm
test.df <- imp.GM.TICV.corrected # imp.GM # imp.wm
tissue <- "spm_gm"
#############################
pop.df$Age <- as.factor(as.character(pop.df$Age))
test.df$Age <- as.factor(as.character(test.df$Age))
test.df$domain <- droplevels(test.df$domain)
pop.df$sample <- "population"
df <- test.df # rbind(test.df, pop.df)
CairoPDF(file=paste("~/reviewer_gm_vol.pdf", sep=""), width=8, height=12, pointsize=10)
#geom_boxplot(data=pop.df,outlier.shape=NA) +
p <- ggplot(df, aes(x=df$domain, y=df$score)) +
geom_boxplot(data=df, outlier.shape=NA, aes(color=df$sample,),position=position_dodge(width = 0.90)) +
geom_jitter(data=df, size = 1, alpha=0.6, position=position_dodge(width = 0.90), aes(x=df$domain, y=df$score, color=df$sample)) +
theme_classic() +
theme(axis.text.x=element_text(angle=45,hjust=1)) +
labs(x="ROI",y="Volume", caption="") +
scale_color_manual(values = npgGroupPalette) +
coord_flip() +
geom_vline(xintercept=28.5,linetype="dashed") +
ylab("Volume/TCIV") +
ggtitle("Distribution of Imperial TBI patients & controls overlaid on population data (boxplots)")
plot(p); dev.off(); p
p
print("Saving plot: ")
pop.ml <- read_csv('/Volumes/GoogleDrive/My\ Drive/work/Imperial/Paeds/analysis/beta/pVolume/data/mahal_data/ROIs/WM/pop-ml-skel.csv')
imp.ml <- read_csv('/Volumes/GoogleDrive/My\ Drive/work/Imperial/Paeds/analysis/beta/pVolume/data/mahal_data/ROIs/WM/paed-ml-skel.csv')
pop.vb <- read_csv('/Volumes/GoogleDrive/My\ Drive/work/Imperial/Paeds/analysis/beta/pVolume/data/mahal_data/ROIs/WM/pop-vbsds-skel.csv')
imp.vb <- read_csv('/Volumes/GoogleDrive/My\ Drive/work/Imperial/Paeds/analysis/beta/pVolume/data/mahal_data/ROIs/WM/paed-vbsds-skel.csv')
# Correct coding
imp.ml$ID[imp.ml$ID=="PTBI116"] <- "PTBI042"
# Correcting encoding inconsistancies
imp.ml$ID[imp.ml$ID=="PTBi004"] <- "PTBI004"
imp.ml$ID[imp.ml$ID=="PTBi103"] <- "PTBI103"
imp.ml$ID[imp.ml$ID=="PITB010"] <- "PTBI010"
imp.vb$ID[imp.vb$ID=="PTBI116"] <- "PTBI042"
# Correcting encoding inconsistancies
imp.vb$ID[imp.vb$ID=="PTBi004"] <- "PTBI004"
imp.vb$ID[imp.vb$ID=="PTBi103"] <- "PTBI103"
imp.vb$ID[imp.vb$ID=="PITB010"] <- "PTBI010"
tmp.pop.WM <- merge(pop.ml, pop.vb, by = "ID")
tmp.imp.WM <- merge(imp.ml, imp.vb, by = "ID")
tmp.pop.WM2 <- merge(tmp.pop.WM, population.df, by = "ID")
pop.wm <- tmp.pop.WM2 %>%
dplyr::select(ID, age, sample.x, spm.TICV, skel_MNI_Bodyofcorpuscallosum,	skel_MNI_CoronaRadiataL,	skel_MNI_CoronaRadiataR,	skel_MNI_Corticospinal_L, skel_MNI_Corticospinal_R,	skel_MNI_Genuofcorpuscallosum,	skel_MNI_Inf_longitudinal_fasc_L, skel_MNI_Inf_longitudinal_fasc_R,	skel_MNI_mean_FA_skeleton_mask,	skel_MNI_MiddleCerebellarPeduncle, skel_MNI_Spleniumofcorpuscallosum, AnteriorLeftCaudate_ACC_1mm, AnteriorRightCaudate_ACC_1mm, MNI_VBtract_256bin_R, MNI_VBtract_256bin) %>%
dplyr::rename(sample = sample.x,
Age = age,
BCC = skel_MNI_Bodyofcorpuscallosum,
CR_L = skel_MNI_CoronaRadiataL,
CR_R = skel_MNI_CoronaRadiataR,
CST_L = skel_MNI_Corticospinal_L,
CST_R = skel_MNI_Corticospinal_R,
GCC = skel_MNI_Genuofcorpuscallosum,
ILF_L = skel_MNI_Inf_longitudinal_fasc_L,
ILF_R = skel_MNI_Inf_longitudinal_fasc_R,
WM_VOL = skel_MNI_mean_FA_skeleton_mask,
MCP = skel_MNI_MiddleCerebellarPeduncle,
SCC = skel_MNI_Spleniumofcorpuscallosum,
AC_ACC_L = AnteriorLeftCaudate_ACC_1mm,
AC_ACC_R = AnteriorRightCaudate_ACC_1mm,
VB_R = MNI_VBtract_256bin_R,
VB_L = MNI_VBtract_256bin) #%>%
# Correct for ICV
pop.wm.TICV.corrected <- pop.wm
cols <- 5:19 # IMPORTANT TO UPDATE IF NEW COLUMNS ADDED!!
pop.wm.TICV.corrected[,cols] <- lapply(pop.wm.TICV.corrected[,cols], function(x) x/pop.wm.TICV.corrected$spm.TICV)
pop.wm.TICV.corrected <- pop.wm.TICV.corrected %>%
gather(key = "domain", value = "score", BCC, CR_L, CR_R, CST_L, CST_R, GCC, ILF_L, ILF_R, WM_VOL, MCP, SCC, AC_ACC_L, AC_ACC_R, VB_R, VB_L) %>%   # long format
mutate(domain = factor(domain))
pop.wm.TICV.corrected$domain <- factor(pop.wm.TICV.corrected$domain,levels = c("BCC", "GCC", "SCC", "CST_L", "CST_R", "CR_L", "CR_R", "ILF_L", "ILF_R", "MCP", "AC_ACC_L", "AC_ACC_R", "VB_R", "VB_L", "WM_VOL"))
# Imperial wm
tmp.imp.WM2 <- merge(tmp.imp.WM, tmp.df, by = "ID")
imp.wm <- tmp.imp.WM2 %>%
dplyr::select(ID, Age, sample, spm.TICV, MNI_Bodyofcorpuscallosum,	MNI_CoronaRadiataL,	MNI_CoronaRadiataR,	MNI_Corticospinal_L, MNI_Corticospinal_R,	MNI_Genuofcorpuscallosum,	MNI_Inf_longitudinal_fasc_L, MNI_Inf_longitudinal_fasc_R,	MNI_mean_FA_skeleton_mask,	MNI_MiddleCerebellarPeduncle, MNI_Spleniumofcorpuscallosum, AnteriorLeftCaudate_ACC_1mm, AnteriorRightCaudate_ACC_1mm, MNI_VBtract_256bin_R, MNI_VBtract_256bin) %>%
dplyr::rename(#sample = Group,
#Age = age,
BCC = MNI_Bodyofcorpuscallosum,
CR_L = MNI_CoronaRadiataL,
CR_R = MNI_CoronaRadiataR,
CST_L = MNI_Corticospinal_L,
CST_R = MNI_Corticospinal_R,
GCC = MNI_Genuofcorpuscallosum,
ILF_L = MNI_Inf_longitudinal_fasc_L,
ILF_R = MNI_Inf_longitudinal_fasc_R,
WM_VOL = MNI_mean_FA_skeleton_mask,
MCP = MNI_MiddleCerebellarPeduncle,
SCC = MNI_Spleniumofcorpuscallosum,
AC_ACC_L = AnteriorLeftCaudate_ACC_1mm,
AC_ACC_R = AnteriorRightCaudate_ACC_1mm,
VB_R = MNI_VBtract_256bin_R,
VB_L = MNI_VBtract_256bin) #%>%
imp.wm <- na.omit(imp.wm)
# Correct for ICV
imp.wm.TICV.corrected <- imp.wm
cols <- 5:19 # IMPORTANT TO UPDATE IF NEW COLUMNS ADDED!!
imp.wm.TICV.corrected[,cols] <- lapply(imp.wm.TICV.corrected[,cols], function(x) x/imp.wm.TICV.corrected$spm.TICV)
imp.wm.TICV.corrected <- imp.wm.TICV.corrected %>%
gather(key = "domain", value = "score", BCC, CR_L, CR_R, CST_L, CST_R, GCC, ILF_L, ILF_R, WM_VOL, MCP, SCC, AC_ACC_L, AC_ACC_R, VB_R, VB_L) %>%   # long format
mutate(domain = factor(domain))
imp.wm.TICV.corrected$domain <- factor(imp.wm.TICV.corrected$domain,levels = c("BCC", "GCC", "SCC", "CST_L", "CST_R", "CR_L", "CR_R", "ILF_L", "ILF_R", "MCP", "AC_ACC_L", "AC_ACC_R", "VB_R", "VB_L", "WM_VOL"))
#############################
# EDIT HERE:
# cortical, subcortical, wm, net
pop.df <- pop.wm.TICV.corrected # pop.wm
test.df <- imp.wm.TICV.corrected # imp.wm
tissue <- "wm"
#############################
result <- paste("~/QCvol_", tissue, "_classification/", sep="")
dir.create(result)
pop.df$Age <- as.factor(as.character(pop.df$Age))
test.df$Age <- as.factor(as.character(test.df$Age))
test.df$domain <- droplevels(test.df$domain)
# Plot
CairoPDF(file=paste("~/reviewer_wm_vol.pdf", sep=""), width=10, height=6, pointsize=10)
p <- ggplot(pop.df, aes(x=pop.df$domain, y=pop.df$score)) +
geom_boxplot(data=pop.df,outlier.shape=NA) +
theme_classic() +
theme(axis.text.x=element_text(angle=45,hjust=1)) +
labs(x="ROI",y="Volume/TICV", caption="") +
geom_jitter(data=test.df, size = 2, position=position_dodge(width = 0.90), alpha=0.8,
aes(x=test.df$domain, y=test.df$score, color=test.df$sample)) +
scale_colour_manual(values = npgGroupPalette) +
geom_vline(xintercept=14.5,linetype="dashed") +
scale_x_discrete(labels=c( "WM_VOL" = "WM", "CST_L" = "lh CST", "CST_R" = "rh CST", "CR_L" = "lh CR", "CR_R" = "rh CR", "ILF_L" = "lh ILF", "ILF_R" = "rh ILF", "AC_ACC_L" = "lh AC-ACC", "AC_ACC_R" = "rh AC-ACC", "VB_L" = "lh Aslant", "VB_R" = "rh Aslant" )) +
coord_flip() +
ggtitle("")
plot(p); dev.off(); p
#############################
# EDIT HERE:
# cortical, subcortical, wm, net
pop.df <- pop.wm.TICV.corrected # pop.wm
test.df <- imp.wm.TICV.corrected # imp.wm
tissue <- "wm"
#############################
result <- paste("~/QCvol_", tissue, "_classification/", sep="")
dir.create(result)
pop.df$Age <- as.factor(as.character(pop.df$Age))
test.df$Age <- as.factor(as.character(test.df$Age))
test.df$domain <- droplevels(test.df$domain)
# Plot
CairoPDF(file=paste("~/reviewer_wm_vol.pdf", sep=""), width=10, height=6, pointsize=10)
p <- ggplot(test.df, aes(x=test.df$domain, y=test.df$score)) +
geom_boxplot(data=test.df,outlier.shape=NA) +
theme_classic() +
theme(axis.text.x=element_text(angle=45,hjust=1)) +
labs(x="ROI",y="Volume/TICV", caption="") +
geom_jitter(data=test.df, size = 2, position=position_dodge(width = 0.90), alpha=0.8,
aes(x=test.df$domain, y=test.df$score, color=test.df$sample)) +
scale_colour_manual(values = npgGroupPalette) +
geom_vline(xintercept=14.5,linetype="dashed") +
scale_x_discrete(labels=c( "WM_VOL" = "WM", "CST_L" = "lh CST", "CST_R" = "rh CST", "CR_L" = "lh CR", "CR_R" = "rh CR", "ILF_L" = "lh ILF", "ILF_R" = "rh ILF", "AC_ACC_L" = "lh AC-ACC", "AC_ACC_R" = "rh AC-ACC", "VB_L" = "lh Aslant", "VB_R" = "rh Aslant" )) +
coord_flip() +
ggtitle("")
plot(p); dev.off(); p
p <- ggplot(test.df, aes(x=test.df$domain, y=test.df$score)) +
geom_boxplot(data=test.df,outlier.shape=NA, group = sample) +
theme_classic() +
theme(axis.text.x=element_text(angle=45,hjust=1)) +
labs(x="ROI",y="Volume/TICV", caption="") +
geom_jitter(data=test.df, size = 2, position=position_dodge(width = 0.90), alpha=0.8,
aes(x=test.df$domain, y=test.df$score, color=test.df$sample)) +
scale_colour_manual(values = npgGroupPalette) +
geom_vline(xintercept=14.5,linetype="dashed") +
scale_x_discrete(labels=c( "WM_VOL" = "WM", "CST_L" = "lh CST", "CST_R" = "rh CST", "CR_L" = "lh CR", "CR_R" = "rh CR", "ILF_L" = "lh ILF", "ILF_R" = "rh ILF", "AC_ACC_L" = "lh AC-ACC", "AC_ACC_R" = "rh AC-ACC", "VB_L" = "lh Aslant", "VB_R" = "rh Aslant" )) +
coord_flip() +
ggtitle("")
plot(p); dev.off(); p
#############################
# EDIT HERE:
# cortical, subcortical, wm, net
pop.df <- pop.wm.TICV.corrected # pop.wm
test.df <- imp.wm.TICV.corrected # imp.wm
tissue <- "wm"
#############################
result <- paste("~/QCvol_", tissue, "_classification/", sep="")
dir.create(result)
pop.df$Age <- as.factor(as.character(pop.df$Age))
test.df$Age <- as.factor(as.character(test.df$Age))
test.df$domain <- droplevels(test.df$domain)
# Plot
CairoPDF(file=paste("~/reviewer_wm_vol.pdf", sep=""), width=10, height=6, pointsize=10)
p <- ggplot(test.df, aes(x=test.df$domain, y=test.df$score)) +
geom_boxplot(data=test.df,outlier.shape=NA, aes(color=df$sample)) +
theme_classic() +
theme(axis.text.x=element_text(angle=45,hjust=1)) +
labs(x="ROI",y="Volume/TICV", caption="") +
geom_jitter(data=test.df, size = 2, position=position_dodge(width = 0.90), alpha=0.8,
aes(x=test.df$domain, y=test.df$score, color=test.df$sample)) +
scale_colour_manual(values = npgGroupPalette) +
geom_vline(xintercept=14.5,linetype="dashed") +
scale_x_discrete(labels=c( "WM_VOL" = "WM", "CST_L" = "lh CST", "CST_R" = "rh CST", "CR_L" = "lh CR", "CR_R" = "rh CR", "ILF_L" = "lh ILF", "ILF_R" = "rh ILF", "AC_ACC_L" = "lh AC-ACC", "AC_ACC_R" = "rh AC-ACC", "VB_L" = "lh Aslant", "VB_R" = "rh Aslant" )) +
coord_flip() +
ggtitle("")
plot(p); dev.off(); p
#############################
# EDIT HERE:
# cortical, subcortical, wm, net
pop.df <- pop.wm.TICV.corrected # pop.wm
test.df <- imp.wm.TICV.corrected # imp.wm
tissue <- "wm"
#############################
result <- paste("~/QCvol_", tissue, "_classification/", sep="")
dir.create(result)
pop.df$Age <- as.factor(as.character(pop.df$Age))
test.df$Age <- as.factor(as.character(test.df$Age))
test.df$domain <- droplevels(test.df$domain)
# Plot
CairoPDF(file=paste("~/reviewer_wm_vol.pdf", sep=""), width=10, height=6, pointsize=10)
p <- ggplot(test.df, aes(x=test.df$domain, y=test.df$score)) +
geom_boxplot(data=test.df,outlier.shape=NA, aes(color=test.df$sample)) +
theme_classic() +
theme(axis.text.x=element_text(angle=45,hjust=1)) +
labs(x="ROI",y="Volume/TICV", caption="") +
geom_jitter(data=test.df, size = 2, position=position_dodge(width = 0.90), alpha=0.8,
aes(x=test.df$domain, y=test.df$score, color=test.df$sample)) +
scale_colour_manual(values = npgGroupPalette) +
geom_vline(xintercept=14.5,linetype="dashed") +
scale_x_discrete(labels=c( "WM_VOL" = "WM", "CST_L" = "lh CST", "CST_R" = "rh CST", "CR_L" = "lh CR", "CR_R" = "rh CR", "ILF_L" = "lh ILF", "ILF_R" = "rh ILF", "AC_ACC_L" = "lh AC-ACC", "AC_ACC_R" = "rh AC-ACC", "VB_L" = "lh Aslant", "VB_R" = "rh Aslant" )) +
coord_flip() +
ggtitle("")
plot(p); dev.off(); p
#############################
# EDIT HERE:
# cortical, subcortical, wm, net
pop.df <- pop.wm.TICV.corrected # pop.wm
test.df <- imp.wm.TICV.corrected # imp.wm
tissue <- "wm"
#############################
result <- paste("~/QCvol_", tissue, "_classification/", sep="")
dir.create(result)
pop.df$Age <- as.factor(as.character(pop.df$Age))
test.df$Age <- as.factor(as.character(test.df$Age))
test.df$domain <- droplevels(test.df$domain)
# Plot
CairoPDF(file=paste("~/reviewer_wm_vol.pdf", sep=""), width=10, height=6, pointsize=10)
p <- ggplot(test.df, aes(x=test.df$domain, y=test.df$score)) +
geom_boxplot(data=test.df,outlier.shape=NA, aes(color=test.df$sample)) +
theme_classic() +
theme(axis.text.x=element_text(angle=45,hjust=1)) +
labs(x="ROI",y="Volume/TICV", caption="") +
geom_jitter(data=test.df, size = 2, position=position_dodge(width = 0.90), alpha=0.6,
aes(x=test.df$domain, y=test.df$score, color=test.df$sample)) +
scale_colour_manual(values = npgGroupPalette) +
geom_vline(xintercept=14.5,linetype="dashed") +
scale_x_discrete(labels=c( "WM_VOL" = "WM", "CST_L" = "lh CST", "CST_R" = "rh CST", "CR_L" = "lh CR", "CR_R" = "rh CR", "ILF_L" = "lh ILF", "ILF_R" = "rh ILF", "AC_ACC_L" = "lh AC-ACC", "AC_ACC_R" = "rh AC-ACC", "VB_L" = "lh Aslant", "VB_R" = "rh Aslant" )) +
coord_flip() +
ggtitle("")
plot(p); dev.off(); p
#############################
# EDIT HERE:
# cortical, subcortical, wm, net
pop.df <- pop.wm.TICV.corrected # pop.wm
test.df <- imp.wm.TICV.corrected # imp.wm
tissue <- "wm"
#############################
result <- paste("~/QCvol_", tissue, "_classification/", sep="")
dir.create(result)
pop.df$Age <- as.factor(as.character(pop.df$Age))
test.df$Age <- as.factor(as.character(test.df$Age))
test.df$domain <- droplevels(test.df$domain)
# Plot
CairoPDF(file=paste("~/reviewer_wm_vol.pdf", sep=""), width=10, height=6, pointsize=10)
p <- ggplot(test.df, aes(x=test.df$domain, y=test.df$score)) +
geom_boxplot(data=test.df,outlier.shape=NA, aes(color=test.df$sample)) +
theme_classic() +
theme(axis.text.x=element_text(angle=45,hjust=1)) +
labs(x="ROI",y="Volume/TICV", caption="") +
geom_jitter(data=test.df, size = 2, position=position_dodge(width = 0.90), alpha=0.4,
aes(x=test.df$domain, y=test.df$score, color=test.df$sample)) +
scale_colour_manual(values = npgGroupPalette) +
geom_vline(xintercept=14.5,linetype="dashed") +
scale_x_discrete(labels=c( "WM_VOL" = "WM", "CST_L" = "lh CST", "CST_R" = "rh CST", "CR_L" = "lh CR", "CR_R" = "rh CR", "ILF_L" = "lh ILF", "ILF_R" = "rh ILF", "AC_ACC_L" = "lh AC-ACC", "AC_ACC_R" = "rh AC-ACC", "VB_L" = "lh Aslant", "VB_R" = "rh Aslant" )) +
coord_flip() +
ggtitle("")
plot(p); dev.off(); p
GM.R2 <- imp.GM
cols <- 6:49 # IMPORTANT TO UPDATE IF NEW COLUMNS ADDED!!
GM.R2[,cols] <- lapply(GM.R2[,cols], function(x) x/GM.R2$spm.TICV)
# Reformat to long format
GM.R2 <- GM.R2 %>%
dplyr::select(ID, Age, sample, GM, lh_insula, rh_insula, 	lh_Amygdala,	lh_Caudate,	lh_Putamen,	lh_Thalamus,	lh_Hippocampus,	rh_Amygdala,	rh_Caudate,	rh_Putamen,	rh_Thalamus, rh_Hippocampus, lh_IFG_oper,		lh_ACG,	lh_PCG,	lh_AParaHipp,	lh_PParaHipp,	lh_TOF,	lh_SPL,	rh_IFG_oper,	rh_ACG,	rh_PCG,	rh_AParaHipp,	rh_PParaHipp,	rh_TOF,	rh_SPL, lh_OP, lh_MPFC, rh_OP, rh_MPFC, lh_AG, rh_AG)# %>%
#gather(key = "domain", value = "score", GM, lh_insula, rh_insula,	lh_Amygdala,	lh_Caudate,	lh_Putamen,	lh_Thalamus,	lh_Hippocampus,	rh_Amygdala,	rh_Caudate,	rh_Putamen,	rh_Thalamus, rh_Hippocampus, lh_IFG_oper,		lh_ACG,	lh_PCG,	lh_AParaHipp,	lh_PParaHipp,	rh_IFG_oper,	rh_ACG,	rh_PCG,	rh_AParaHipp,	rh_PParaHipp, lh_OP, lh_MPFC, rh_OP, rh_MPFC, lh_AG, rh_AG, lh_SPL, rh_SPL) %>%   # long format
#mutate(domain = factor(domain))
# Correct for ICV
WM.R2 <- imp.wm
cols <- 5:19 # IMPORTANT TO UPDATE IF NEW COLUMNS ADDED!!
WM.R2[,cols] <- lapply(WM.R2[,cols], function(x) x/WM.R2$spm.TICV)
df.R2 <- merge(GM.R2, WM.R2, by = 'ID')
class.df <- read_xlsx("~/GD/work/Imperial/Paeds/tmp_QC/classifications.xlsx",
sheet = "r",
col_names = TRUE)
df.R2 <- merge(df.R2, class.df, by = 'ID')
df.R2$Contusion.MRI <- as.factor(df.R2$Contusion.MRI)
t.test(df.R2$GM ~ df.R2$Contusion.MRI, var.equal=TRUE)
t.test(df.R2$WM ~ df.R2$Contusion.MRI, var.equal=TRUE)
t.test(df.R2$GM ~ df.R2$Microbleed)
t.test(df.R2$WM ~ df.R2$Microbleed)
cor.test(df.R2$GM, df.R2$LesionVolume)
plot(df.R2$GM, df.R2$LesionVolume)
p <- ggplot(data = df.R2, aes( x = GM, y = LesionVolume, group = Contusion.MRI)) +
geom_point() +
geom_smooth(method = "glm")
p
View(df.R2)
hist(df.R2$LesionVolume)
plot(df.R2$LesionVolume)
geom_histogram(df.R2$LesionVolume)
ggplot(data = df.R2, aes( x = LesionVolume, group = Contusion.MRI)) +
geom_histogram(df.R2$LesionVolume)
ggplot(data = df.R2, aes( x = LesionVolume, group = Contusion.MRI)) +
geom_histogram()
ggplot(data = df.R2, aes( x = LesionVolume, group = Contusion.MRI)) +
geom_histogram(binwidth = 5000)
ggplot(data = df.R2, aes( x = LesionVolume, group = Contusion.MRI)) +
geom_histogram(binwidth = 50000)
transform(df.R2$LesionVolume)
LV.t <- transform(df.R2$LesionVolume)
plot.transform(LV.t)
summary.transform(LV.t)
View(LV.t)
summary.transform(df.R2$LesionVolume)
LV.log <- log(df.R2$LesionVolume)
LV.log
hist(LV.log)
p <- ggplot(data = df.R2, aes( x = GM, y = LV.log, group = Contusion.MRI)) +
geom_point() +
geom_smooth(method = "glm")
p
df.R2$LV.log <- LV.log
p <- ggplot(data = df.R2, aes( x = GM, y = LV.log, group = Contusion.MRI)) +
geom_point() +
geom_smooth(method = "glm")
p
p <- ggplot(data = df.R2, aes( x = GM, y = LV.log, group = Contusion.MRI)) +
geom_point() +
geom_smooth(method = "glm") +
ylim(-2, 14)
p
p <- ggplot(data = df.R2, aes( x = GM, y = LV.log, group = Contusion.MRI)) +
geom_point() +
stat_cor() +
geom_smooth(method = "glm")
p
View(GM.R2)
newdata <- mydata[ which(sample$gender=='Patient'), ]
newdata <- df.R2[ which(sample$gender=='Patient'), ]
newdata <- df.R2[ which(df.R2$sample.x=='Patient'), ]
# GM Linear model
m1 <- lm(GM ~ LV.log*Age, data = newdata)
View(newdata)
# GM Linear model
m1 <- lm(GM ~ LV.log*Age.x, data = newdata)
# GM Linear model
m1 <- lm(GM ~ LesionVolume*Age.x, data = newdata)
Anova(m1, type="III")
# compare if slopes are different between groups (interaction)
lsm = lsmeans(m1, ~sample|age) #
# compare if slopes are different between groups (interaction)
lsm = lsmeans(m1, ~LesionVolume|Age.x) #
contrast(lsm, interaction = "pairwise", adjust="tukey")
# compare if slopes are different between groups (interaction)
lsm = lsmeans(m1, ~Age.x) #
contrast(lsm, interaction = "pairwise", adjust="tukey")
Anova(m1, type="III")
p <- ggplot(data = newdata, aes( x = GM, y = LV.log)) +
geom_point() +
stat_cor() +
geom_smooth(method = "glm")
p
newdata <- df.R2[ which(df.R2$sample.x=='Patient' & df.R2$LesionVolume == 0 ), ]
p <- ggplot(data = newdata, aes( x = GM, y = LV.log)) +
geom_point() +
stat_cor() +
geom_smooth(method = "glm")
p
newdata <- df.R2[ which(df.R2$sample.x=='Patient' & df.R2$LesionVolume == '0' ), ]
# GM Linear model
m1 <- lm(GM ~ LesionVolume*Age.x, data = newdata)
Anova(m1, type="III")
# compare if slopes are different between groups (interaction)
lsm = lsmeans(m1, ~Age.x) #
contrast(lsm, interaction = "pairwise", adjust="tukey")
p <- ggplot(data = newdata, aes( x = GM, y = LV.log)) +
geom_point() +
stat_cor() +
geom_smooth(method = "glm")
p
newdata <- df.R2[ which(df.R2$sample.x=='Patient' & df.R2$LesionVolume != 0 ), ]
p <- ggplot(data = newdata, aes( x = GM, y = LV.log)) +
geom_point() +
stat_cor() +
geom_smooth(method = "glm")
p
ggsave("~/review_logT_lesion_vol.pdf", plot = gmp, width = 12, height = 8, units = c("in"), dpi = 300)
ggsave("~/review_logT_lesion_vol.pdf", plot = p, width = 12, height = 8, units = c("in"), dpi = 300)
describe(newdata$LesionVolume)
